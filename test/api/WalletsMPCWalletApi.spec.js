/**
 * Cobo Wallet as a Service 2.0
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import {ApiClient, Env} from "../../src/index.js";

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoboWaas2JsApi);
  }
}(this, function(expect, CoboWaas2JsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    var apiClient = new ApiClient()
    apiClient.setEnv(new Env("https://api.sandbox.cobo.com/v2"));
    apiClient.setPrivateKey("Your private key in hex format without 0x prefix");
    instance = new CoboWaas2JsApi.WalletsMPCWalletApi(apiClient);
  });

  describe('WalletsMPCWalletApi', function() {
    describe('cancelTssRequest', function() {
      it('should call cancelTssRequest successfully', function() {
        //uncomment below and update the code to test cancelTssRequest
        //instance.cancelTssRequest().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('createKeyGroup', function() {
      it('should call createKeyGroup successfully', function() {
        //uncomment below and update the code to test createKeyGroup
        //instance.createKeyGroup().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('createMpcProject', function() {
      it('should call createMpcProject successfully', function() {
        //uncomment below and update the code to test createMpcProject
        //instance.createMpcProject().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('createMpcVault', function() {
      it('should call createMpcVault successfully', function() {
        //uncomment below and update the code to test createMpcVault
        //instance.createMpcVault().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('createTssRequest', function() {
      it('should call createTssRequest successfully', function() {
        //uncomment below and update the code to test createTssRequest
        //instance.createTssRequest().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('deleteKeyGroup', function() {
      it('should call deleteKeyGroup successfully', function() {
        //uncomment below and update the code to test deleteKeyGroup
        //instance.deleteKeyGroup().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getKeyGroup', function() {
      it('should call getKeyGroup successfully', function() {
        //uncomment below and update the code to test getKeyGroup
        //instance.getKeyGroup().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getMpcProject', function() {
      it('should call getMpcProject successfully', function() {
        //uncomment below and update the code to test getMpcProject
        //instance.getMpcProject().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getMpcVault', function() {
      it('should call getMpcVault successfully', function() {
        //uncomment below and update the code to test getMpcVault
        //instance.getMpcVault().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getTssRequest', function() {
      it('should call getTssRequest successfully', function() {
        //uncomment below and update the code to test getTssRequest
        //instance.getTssRequest().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listCoboKeyHolder', function() {
      it('should call listCoboKeyHolder successfully', function() {
        //uncomment below and update the code to test listCoboKeyHolder
        //instance.listCoboKeyHolder().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listKeyGroup', function() {
      it('should call listKeyGroup successfully', function() {
        //uncomment below and update the code to test listKeyGroup
        //instance.listKeyGroup().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listMpcProject', function() {
      it('should call listMpcProject successfully', function() {
        //uncomment below and update the code to test listMpcProject
        //instance.listMpcProject().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listMpcVault', function() {
      it('should call listMpcVault successfully', function() {
        //uncomment below and update the code to test listMpcVault
        //instance.listMpcVault().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTssRequest', function() {
      it('should call listTssRequest successfully', function() {
        //uncomment below and update the code to test listTssRequest
        //instance.listTssRequest().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('modifyMpcVault', function() {
      it('should call modifyMpcVault successfully', function() {
        //uncomment below and update the code to test modifyMpcVault
        //instance.modifyMpcVault().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateKeyGroup', function() {
      it('should call updateKeyGroup successfully', function() {
        //uncomment below and update the code to test updateKeyGroup
        //instance.updateKeyGroup().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateMpcProject', function() {
      it('should call updateMpcProject successfully', function() {
        //uncomment below and update the code to test updateMpcProject
        //instance.updateMpcProject().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
  });

}));
