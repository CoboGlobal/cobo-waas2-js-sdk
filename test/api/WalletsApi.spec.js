/**
 * Cobo Wallet as a Service 2.0
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import {ApiClient, Env} from "../../src/index.js";

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoboWaas2JsApi);
  }
}(this, function(expect, CoboWaas2JsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    var apiClient = new ApiClient()
    apiClient.setEnv(new Env("https://api.sandbox.cobo.com/v2"));
    apiClient.setPrivateKey("Your private key in hex format without 0x prefix");
    instance = new CoboWaas2JsApi.WalletsApi(apiClient);
  });

  describe('WalletsApi', function() {
    describe('addWalletAddress', function() {
      it('should call addWalletAddress successfully', function() {
        //uncomment below and update the code to test addWalletAddress
        //instance.addWalletAddress().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('createWallet', function() {
      it('should call createWallet successfully', function() {
        //uncomment below and update the code to test createWallet
        //instance.createWallet().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('deleteWalletById', function() {
      it('should call deleteWalletById successfully', function() {
        //uncomment below and update the code to test deleteWalletById
        //instance.deleteWalletById().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getAddressValidity', function() {
      it('should call getAddressValidity successfully', function() {
        //uncomment below and update the code to test getAddressValidity
        //instance.getAddressValidity().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getChains', function() {
      it('should call getChains successfully', function() {
        //uncomment below and update the code to test getChains
        //instance.getChains().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getEnabledChains', function() {
      it('should call getEnabledChains successfully', function() {
        //uncomment below and update the code to test getEnabledChains
        //instance.getEnabledChains().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getEnabledTokens', function() {
      it('should call getEnabledTokens successfully', function() {
        //uncomment below and update the code to test getEnabledTokens
        //instance.getEnabledTokens().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getMaxTransferableValue', function() {
      it('should call getMaxTransferableValue successfully', function() {
        //uncomment below and update the code to test getMaxTransferableValue
        //instance.getMaxTransferableValue().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getSpendableList', function() {
      it('should call getSpendableList successfully', function() {
        //uncomment below and update the code to test getSpendableList
        //instance.getSpendableList().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getSupportedChains', function() {
      it('should call getSupportedChains successfully', function() {
        //uncomment below and update the code to test getSupportedChains
        //instance.getSupportedChains().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getSupportedTokens', function() {
      it('should call getSupportedTokens successfully', function() {
        //uncomment below and update the code to test getSupportedTokens
        //instance.getSupportedTokens().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getTokens', function() {
      it('should call getTokens successfully', function() {
        //uncomment below and update the code to test getTokens
        //instance.getTokens().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getWalletAddressTokenBalances', function() {
      it('should call getWalletAddressTokenBalances successfully', function() {
        //uncomment below and update the code to test getWalletAddressTokenBalances
        //instance.getWalletAddressTokenBalances().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getWalletById', function() {
      it('should call getWalletById successfully', function() {
        //uncomment below and update the code to test getWalletById
        //instance.getWalletById().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getWalletTokenBalances', function() {
      it('should call getWalletTokenBalances successfully', function() {
        //uncomment below and update the code to test getWalletTokenBalances
        //instance.getWalletTokenBalances().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listAddresses', function() {
      it('should call listAddresses successfully', function() {
        //uncomment below and update the code to test listAddresses
        //instance.listAddresses().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listWallets', function() {
      it('should call listWallets successfully', function() {
        //uncomment below and update the code to test listWallets
        //instance.listWallets().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('lockSpendableList', function() {
      it('should call lockSpendableList successfully', function() {
        //uncomment below and update the code to test lockSpendableList
        //instance.lockSpendableList().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateWalletById', function() {
      it('should call updateWalletById successfully', function() {
        //uncomment below and update the code to test updateWalletById
        //instance.updateWalletById().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
  });

}));
