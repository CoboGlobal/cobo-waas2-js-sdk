/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ListAddressBooks200Response from '../model/ListAddressBooks200Response';

/**
* AddressBooks service.
* @module api/AddressBooksApi
*/
export default class AddressBooksApi {

    /**
    * Constructs a new AddressBooksApi. 
    * @alias module:api/AddressBooksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * List address book entries
     * This operation retrieves a list of addresses from your address book. 
     * @param {String} chain_id The chain ID, which is the unique identifier of a blockchain. You can retrieve the IDs of all the chains you can use by calling [List enabled chains](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-chains).
     * @param {Object} opts Optional parameters
     * @param {String} [address] The wallet address.
     * @param {String} [label] The address label.
     * @param {Number} [limit = 10)] The maximum number of objects to return. For most operations, the value range is [1, 50].
     * @param {String} [before] A cursor indicating the position before the current page. This value is generated by Cobo and returned in the response. If you are paginating forward from the beginning, you do not need to provide it on the first request. When paginating backward (to the previous page), you should pass the before value returned from the last response. 
     * @param {String} [after] A cursor indicating the position after the current page. This value is generated by Cobo and returned in the response. You do not need to provide it on the first request. When paginating forward (to the next page), you should pass the after value returned from the last response. 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListAddressBooks200Response} and HTTP response
     */
    listAddressBooksWithHttpInfo(chain_id, opts) {
      opts = opts || {};
      let postBody = null;
      if (postBody && postBody.toJSON) {
          postBody = postBody.toJSON()
      }
      // verify the required parameter 'chain_id' is set
      if (chain_id === undefined || chain_id === null) {
        throw new Error("Missing the required parameter 'chain_id' when calling listAddressBooks");
      }

      let pathParams = {
      };
      let queryParams = {
        'chain_id': chain_id,
        'address': opts['address'],
        'label': opts['label'],
        'limit': opts['limit'],
        'before': opts['before'],
        'after': opts['after']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'CoboAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAddressBooks200Response;
      return this.apiClient.callApi(
        '/address_books', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List address book entries
     * This operation retrieves a list of addresses from your address book. 
     * @param {String} chain_id The chain ID, which is the unique identifier of a blockchain. You can retrieve the IDs of all the chains you can use by calling [List enabled chains](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-chains).
     * @param {Object} opts Optional parameters
     * @param {String} opts.address The wallet address.
     * @param {String} opts.label The address label.
     * @param {Number} opts.limit The maximum number of objects to return. For most operations, the value range is [1, 50]. (default to 10)
     * @param {String} opts.before A cursor indicating the position before the current page. This value is generated by Cobo and returned in the response. If you are paginating forward from the beginning, you do not need to provide it on the first request. When paginating backward (to the previous page), you should pass the before value returned from the last response. 
     * @param {String} opts.after A cursor indicating the position after the current page. This value is generated by Cobo and returned in the response. You do not need to provide it on the first request. When paginating forward (to the next page), you should pass the after value returned from the last response. 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListAddressBooks200Response}
     */
    listAddressBooks(chain_id, opts) {
      return this.listAddressBooksWithHttpInfo(chain_id, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
