/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TSSBaseRequestEventData from './TSSBaseRequestEventData';
import TSSEventDataType from './TSSEventDataType';
import TSSKeySignRequest from './TSSKeySignRequest';
import TSSRequestTypeEenum from './TSSRequestTypeEenum';
import TSSSignatures from './TSSSignatures';
import TSSStatus from './TSSStatus';

/**
 * The TSSKeySignEventData model module.
 * @module model/TSSKeySignEventData
 */
class TSSKeySignEventData {
    /**
     * Constructs a new <code>TSSKeySignEventData</code>.
     * @alias module:model/TSSKeySignEventData
     * @implements module:model/TSSBaseRequestEventData
     * @param data_type {module:model/TSSEventDataType} 
     */
    constructor(data_type) { 
        TSSBaseRequestEventData.initialize(this, data_type);
        TSSKeySignEventData.initialize(this, data_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data_type) { 
        obj['data_type'] = data_type;
    }

    /**
     * Constructs a <code>TSSKeySignEventData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TSSKeySignEventData} obj Optional instance to populate.
     * @return {module:model/TSSKeySignEventData} The populated <code>TSSKeySignEventData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TSSKeySignEventData();
            TSSBaseRequestEventData.constructFromObject(data, obj);

            if (data.hasOwnProperty('data_type')) {
                obj['data_type'] = TSSEventDataType.constructFromObject(data['data_type']);
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('request_type')) {
                obj['request_type'] = TSSRequestTypeEenum.constructFromObject(data['request_type']);
            }
            if (data.hasOwnProperty('request_status')) {
                obj['request_status'] = TSSStatus.constructFromObject(data['request_status']);
            }
            if (data.hasOwnProperty('extra_info')) {
                obj['extra_info'] = ApiClient.convertToType(data['extra_info'], 'String');
            }
            if (data.hasOwnProperty('failed_reason')) {
                obj['failed_reason'] = ApiClient.convertToType(data['failed_reason'], 'String');
            }
            if (data.hasOwnProperty('request_detail')) {
                obj['request_detail'] = TSSKeySignRequest.constructFromObject(data['request_detail']);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = TSSSignatures.constructFromObject(data['result']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TSSKeySignEventData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TSSKeySignEventData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TSSKeySignEventData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['extra_info'] && !(typeof data['extra_info'] === 'string' || data['extra_info'] instanceof String)) {
            throw new Error("Expected the field `extra_info` to be a primitive type in the JSON string but got " + data['extra_info']);
        }
        // ensure the json data is a string
        if (data['failed_reason'] && !(typeof data['failed_reason'] === 'string' || data['failed_reason'] instanceof String)) {
            throw new Error("Expected the field `failed_reason` to be a primitive type in the JSON string but got " + data['failed_reason']);
        }
        // validate the optional field `request_detail`
        if (data['request_detail']) { // data not null
          if (!!TSSKeySignRequest.validateJSON) {
            TSSKeySignRequest.validateJSON(data['request_detail']);
          }
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          if (!!TSSSignatures.validateJSON) {
            TSSSignatures.validateJSON(data['result']);
          }
        }

        return true;
    }


}

TSSKeySignEventData.RequiredProperties = ["data_type"];

/**
 * @member {module:model/TSSEventDataType} data_type
 */
TSSKeySignEventData.prototype['data_type'] = undefined;

/**
 * The request ID.
 * @member {String} request_id
 */
TSSKeySignEventData.prototype['request_id'] = undefined;

/**
 * @member {module:model/TSSRequestTypeEenum} request_type
 */
TSSKeySignEventData.prototype['request_type'] = undefined;

/**
 * @member {module:model/TSSStatus} request_status
 */
TSSKeySignEventData.prototype['request_status'] = undefined;

/**
 * The extra info.
 * @member {String} extra_info
 */
TSSKeySignEventData.prototype['extra_info'] = undefined;

/**
 * The failed reason.
 * @member {String} failed_reason
 */
TSSKeySignEventData.prototype['failed_reason'] = undefined;

/**
 * @member {module:model/TSSKeySignRequest} request_detail
 */
TSSKeySignEventData.prototype['request_detail'] = undefined;

/**
 * @member {module:model/TSSSignatures} result
 */
TSSKeySignEventData.prototype['result'] = undefined;


// Implement TSSBaseRequestEventData interface:
/**
 * @member {module:model/TSSEventDataType} data_type
 */
TSSBaseRequestEventData.prototype['data_type'] = undefined;
/**
 * The request ID.
 * @member {String} request_id
 */
TSSBaseRequestEventData.prototype['request_id'] = undefined;
/**
 * @member {module:model/TSSRequestTypeEenum} request_type
 */
TSSBaseRequestEventData.prototype['request_type'] = undefined;
/**
 * @member {module:model/TSSStatus} request_status
 */
TSSBaseRequestEventData.prototype['request_status'] = undefined;
/**
 * The extra info.
 * @member {String} extra_info
 */
TSSBaseRequestEventData.prototype['extra_info'] = undefined;
/**
 * The failed reason.
 * @member {String} failed_reason
 */
TSSBaseRequestEventData.prototype['failed_reason'] = undefined;




export default TSSKeySignEventData;

