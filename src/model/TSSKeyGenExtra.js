/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyShareHolderGroup from './KeyShareHolderGroup';
import MPCProject from './MPCProject';
import MPCVault from './MPCVault';
import OrgInfo from './OrgInfo';
import TSSRequest from './TSSRequest';

/**
 * The TSSKeyGenExtra model module.
 * @module model/TSSKeyGenExtra
 */
class TSSKeyGenExtra {
    /**
     * Constructs a new <code>TSSKeyGenExtra</code>.
     * @alias module:model/TSSKeyGenExtra
     */
    constructor() { 
        
        TSSKeyGenExtra.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TSSKeyGenExtra</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TSSKeyGenExtra} obj Optional instance to populate.
     * @return {module:model/TSSKeyGenExtra} The populated <code>TSSKeyGenExtra</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TSSKeyGenExtra();

            if (data.hasOwnProperty('org')) {
                obj['org'] = OrgInfo.constructFromObject(data['org']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = MPCProject.constructFromObject(data['project']);
            }
            if (data.hasOwnProperty('vault')) {
                obj['vault'] = MPCVault.constructFromObject(data['vault']);
            }
            if (data.hasOwnProperty('target_key_share_holder_group')) {
                obj['target_key_share_holder_group'] = KeyShareHolderGroup.constructFromObject(data['target_key_share_holder_group']);
            }
            if (data.hasOwnProperty('tss_request')) {
                obj['tss_request'] = TSSRequest.constructFromObject(data['tss_request']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TSSKeyGenExtra</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TSSKeyGenExtra</code>.
     */
    static validateJSON(data) {
        // validate the optional field `org`
        if (data['org']) { // data not null
          if (!!OrgInfo.validateJSON) {
            OrgInfo.validateJSON(data['org']);
          }
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          if (!!MPCProject.validateJSON) {
            MPCProject.validateJSON(data['project']);
          }
        }
        // validate the optional field `vault`
        if (data['vault']) { // data not null
          if (!!MPCVault.validateJSON) {
            MPCVault.validateJSON(data['vault']);
          }
        }
        // validate the optional field `target_key_share_holder_group`
        if (data['target_key_share_holder_group']) { // data not null
          if (!!KeyShareHolderGroup.validateJSON) {
            KeyShareHolderGroup.validateJSON(data['target_key_share_holder_group']);
          }
        }
        // validate the optional field `tss_request`
        if (data['tss_request']) { // data not null
          if (!!TSSRequest.validateJSON) {
            TSSRequest.validateJSON(data['tss_request']);
          }
        }

        return true;
    }


}



/**
 * @member {module:model/OrgInfo} org
 */
TSSKeyGenExtra.prototype['org'] = undefined;

/**
 * @member {module:model/MPCProject} project
 */
TSSKeyGenExtra.prototype['project'] = undefined;

/**
 * @member {module:model/MPCVault} vault
 */
TSSKeyGenExtra.prototype['vault'] = undefined;

/**
 * @member {module:model/KeyShareHolderGroup} target_key_share_holder_group
 */
TSSKeyGenExtra.prototype['target_key_share_holder_group'] = undefined;

/**
 * @member {module:model/TSSRequest} tss_request
 */
TSSKeyGenExtra.prototype['tss_request'] = undefined;






export default TSSKeyGenExtra;

