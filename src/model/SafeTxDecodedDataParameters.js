/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SafeTxSubTransaction from './SafeTxSubTransaction';

/**
 * The SafeTxDecodedDataParameters model module.
 * @module model/SafeTxDecodedDataParameters
 */
class SafeTxDecodedDataParameters {
    /**
     * Constructs a new <code>SafeTxDecodedDataParameters</code>.
     * The information about the decoded parameters of the transaction.
     * @alias module:model/SafeTxDecodedDataParameters
     */
    constructor() { 
        
        SafeTxDecodedDataParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SafeTxDecodedDataParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SafeTxDecodedDataParameters} obj Optional instance to populate.
     * @return {module:model/SafeTxDecodedDataParameters} The populated <code>SafeTxDecodedDataParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SafeTxDecodedDataParameters();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('value_decoded')) {
                obj['value_decoded'] = ApiClient.convertToType(data['value_decoded'], [SafeTxSubTransaction]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SafeTxDecodedDataParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SafeTxDecodedDataParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        if (data['value_decoded']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value_decoded'])) {
                throw new Error("Expected the field `value_decoded` to be an array in the JSON data but got " + data['value_decoded']);
            }
            // validate the optional field `value_decoded` (array)
            for (const item of data['value_decoded']) {
                SafeTxSubTransaction.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Name of the parameter
 * @member {String} name
 */
SafeTxDecodedDataParameters.prototype['name'] = undefined;

/**
 * Type of the parameter
 * @member {String} type
 */
SafeTxDecodedDataParameters.prototype['type'] = undefined;

/**
 * Value of the parameter
 * @member {String} value
 */
SafeTxDecodedDataParameters.prototype['value'] = undefined;

/**
 * Decoded value if applicable
 * @member {Array.<module:model/SafeTxSubTransaction>} value_decoded
 */
SafeTxDecodedDataParameters.prototype['value_decoded'] = undefined;






export default SafeTxDecodedDataParameters;

