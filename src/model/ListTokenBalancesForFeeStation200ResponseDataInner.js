/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Balance from './Balance';

/**
 * The ListTokenBalancesForFeeStation200ResponseDataInner model module.
 * @module model/ListTokenBalancesForFeeStation200ResponseDataInner
 */
class ListTokenBalancesForFeeStation200ResponseDataInner {
    /**
     * Constructs a new <code>ListTokenBalancesForFeeStation200ResponseDataInner</code>.
     * The balance information.
     * @alias module:model/ListTokenBalancesForFeeStation200ResponseDataInner
     * @param token_id {String} The token ID, which is the unique identifier of a token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens).
     * @param balance {module:model/Balance} 
     */
    constructor(token_id, balance) { 
        
        ListTokenBalancesForFeeStation200ResponseDataInner.initialize(this, token_id, balance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, token_id, balance) { 
        obj['token_id'] = token_id;
        obj['balance'] = balance;
    }

    /**
     * Constructs a <code>ListTokenBalancesForFeeStation200ResponseDataInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTokenBalancesForFeeStation200ResponseDataInner} obj Optional instance to populate.
     * @return {module:model/ListTokenBalancesForFeeStation200ResponseDataInner} The populated <code>ListTokenBalancesForFeeStation200ResponseDataInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTokenBalancesForFeeStation200ResponseDataInner();

            if (data.hasOwnProperty('token_id')) {
                obj['token_id'] = ApiClient.convertToType(data['token_id'], 'String');
            }
            if (data.hasOwnProperty('chain_id')) {
                obj['chain_id'] = ApiClient.convertToType(data['chain_id'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = Balance.constructFromObject(data['balance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTokenBalancesForFeeStation200ResponseDataInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTokenBalancesForFeeStation200ResponseDataInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListTokenBalancesForFeeStation200ResponseDataInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['token_id'] && !(typeof data['token_id'] === 'string' || data['token_id'] instanceof String)) {
            throw new Error("Expected the field `token_id` to be a primitive type in the JSON string but got " + data['token_id']);
        }
        // ensure the json data is a string
        if (data['chain_id'] && !(typeof data['chain_id'] === 'string' || data['chain_id'] instanceof String)) {
            throw new Error("Expected the field `chain_id` to be a primitive type in the JSON string but got " + data['chain_id']);
        }
        // validate the optional field `balance`
        if (data['balance']) { // data not null
          if (!!Balance.validateJSON) {
            Balance.validateJSON(data['balance']);
          }
        }

        return true;
    }


}

ListTokenBalancesForFeeStation200ResponseDataInner.RequiredProperties = ["token_id", "balance"];

/**
 * The token ID, which is the unique identifier of a token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens).
 * @member {String} token_id
 */
ListTokenBalancesForFeeStation200ResponseDataInner.prototype['token_id'] = undefined;

/**
 * The chain ID, which is the unique identifier of a blockchain. You can retrieve the IDs of all the chains you can use by calling [List enabled chains](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-chains).
 * @member {String} chain_id
 */
ListTokenBalancesForFeeStation200ResponseDataInner.prototype['chain_id'] = undefined;

/**
 * @member {module:model/Balance} balance
 */
ListTokenBalancesForFeeStation200ResponseDataInner.prototype['balance'] = undefined;






export default ListTokenBalancesForFeeStation200ResponseDataInner;

