/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApprovalTransactionResult from './ApprovalTransactionResult';
import ApprovalUserDetail from './ApprovalUserDetail';

/**
 * The RoleDetail model module.
 * @module model/RoleDetail
 */
class RoleDetail {
    /**
     * Constructs a new <code>RoleDetail</code>.
     * Transaction approval details response schema.
     * @alias module:model/RoleDetail
     */
    constructor() { 
        
        RoleDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoleDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoleDetail} obj Optional instance to populate.
     * @return {module:model/RoleDetail} The populated <code>RoleDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoleDetail();

            if (data.hasOwnProperty('result')) {
                obj['result'] = ApprovalTransactionResult.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('user_details')) {
                obj['user_details'] = ApiClient.convertToType(data['user_details'], [ApprovalUserDetail]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoleDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoleDetail</code>.
     */
    static validateJSON(data) {
        if (data['user_details']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['user_details'])) {
                throw new Error("Expected the field `user_details` to be an array in the JSON data but got " + data['user_details']);
            }
            // validate the optional field `user_details` (array)
            for (const item of data['user_details']) {
                ApprovalUserDetail.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ApprovalTransactionResult} result
 */
RoleDetail.prototype['result'] = undefined;

/**
 * The threshold for the transaction approval.
 * @member {Number} threshold
 */
RoleDetail.prototype['threshold'] = undefined;

/**
 * @member {Array.<module:model/ApprovalUserDetail>} user_details
 */
RoleDetail.prototype['user_details'] = undefined;






export default RoleDetail;

