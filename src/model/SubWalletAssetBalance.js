/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TokenBalanceBalance from './TokenBalanceBalance';

/**
 * The SubWalletAssetBalance model module.
 * @module model/SubWalletAssetBalance
 */
class SubWalletAssetBalance {
    /**
     * Constructs a new <code>SubWalletAssetBalance</code>.
     * The information about the asset balance of a trading account.
     * @alias module:model/SubWalletAssetBalance
     * @param asset_id {String} The asset ID. An asset ID is the unique identifier of the asset held within your linked exchange account.
     * @param balance {module:model/TokenBalanceBalance} 
     */
    constructor(asset_id, balance) { 
        
        SubWalletAssetBalance.initialize(this, asset_id, balance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, asset_id, balance) { 
        obj['asset_id'] = asset_id;
        obj['balance'] = balance;
    }

    /**
     * Constructs a <code>SubWalletAssetBalance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubWalletAssetBalance} obj Optional instance to populate.
     * @return {module:model/SubWalletAssetBalance} The populated <code>SubWalletAssetBalance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubWalletAssetBalance();

            if (data.hasOwnProperty('trading_account_type')) {
                obj['trading_account_type'] = ApiClient.convertToType(data['trading_account_type'], 'String');
            }
            if (data.hasOwnProperty('asset_id')) {
                obj['asset_id'] = ApiClient.convertToType(data['asset_id'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = TokenBalanceBalance.constructFromObject(data['balance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubWalletAssetBalance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubWalletAssetBalance</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubWalletAssetBalance.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['trading_account_type'] && !(typeof data['trading_account_type'] === 'string' || data['trading_account_type'] instanceof String)) {
            throw new Error("Expected the field `trading_account_type` to be a primitive type in the JSON string but got " + data['trading_account_type']);
        }
        // ensure the json data is a string
        if (data['asset_id'] && !(typeof data['asset_id'] === 'string' || data['asset_id'] instanceof String)) {
            throw new Error("Expected the field `asset_id` to be a primitive type in the JSON string but got " + data['asset_id']);
        }
        // validate the optional field `balance`
        if (data['balance']) { // data not null
          if (!!TokenBalanceBalance.validateJSON) {
            TokenBalanceBalance.validateJSON(data['balance']);
          }
        }

        return true;
    }


}

SubWalletAssetBalance.RequiredProperties = ["asset_id", "balance"];

/**
 * The trading account type.
 * @member {String} trading_account_type
 */
SubWalletAssetBalance.prototype['trading_account_type'] = undefined;

/**
 * The asset ID. An asset ID is the unique identifier of the asset held within your linked exchange account.
 * @member {String} asset_id
 */
SubWalletAssetBalance.prototype['asset_id'] = undefined;

/**
 * @member {module:model/TokenBalanceBalance} balance
 */
SubWalletAssetBalance.prototype['balance'] = undefined;






export default SubWalletAssetBalance;

