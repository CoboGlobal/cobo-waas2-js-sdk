/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TSSProtocol from './TSSProtocol';
import TSSSignatureType from './TSSSignatureType';

/**
 * The TSSKeySignRequest model module.
 * @module model/TSSKeySignRequest
 */
class TSSKeySignRequest {
    /**
     * Constructs a new <code>TSSKeySignRequest</code>.
     * @alias module:model/TSSKeySignRequest
     */
    constructor() { 
        
        TSSKeySignRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TSSKeySignRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TSSKeySignRequest} obj Optional instance to populate.
     * @return {module:model/TSSKeySignRequest} The populated <code>TSSKeySignRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TSSKeySignRequest();

            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
            }
            if (data.hasOwnProperty('root_pub_key')) {
                obj['root_pub_key'] = ApiClient.convertToType(data['root_pub_key'], 'String');
            }
            if (data.hasOwnProperty('used_node_ids')) {
                obj['used_node_ids'] = ApiClient.convertToType(data['used_node_ids'], ['String']);
            }
            if (data.hasOwnProperty('bip32_path_list')) {
                obj['bip32_path_list'] = ApiClient.convertToType(data['bip32_path_list'], ['String']);
            }
            if (data.hasOwnProperty('msg_hash_list')) {
                obj['msg_hash_list'] = ApiClient.convertToType(data['msg_hash_list'], ['String']);
            }
            if (data.hasOwnProperty('tweak_list')) {
                obj['tweak_list'] = ApiClient.convertToType(data['tweak_list'], ['String']);
            }
            if (data.hasOwnProperty('signature_type')) {
                obj['signature_type'] = TSSSignatureType.constructFromObject(data['signature_type']);
            }
            if (data.hasOwnProperty('tss_protocol')) {
                obj['tss_protocol'] = TSSProtocol.constructFromObject(data['tss_protocol']);
            }
            if (data.hasOwnProperty('task_id')) {
                obj['task_id'] = ApiClient.convertToType(data['task_id'], 'String');
            }
            if (data.hasOwnProperty('biz_task_id')) {
                obj['biz_task_id'] = ApiClient.convertToType(data['biz_task_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TSSKeySignRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TSSKeySignRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['group_id'] && !(typeof data['group_id'] === 'string' || data['group_id'] instanceof String)) {
            throw new Error("Expected the field `group_id` to be a primitive type in the JSON string but got " + data['group_id']);
        }
        // ensure the json data is a string
        if (data['root_pub_key'] && !(typeof data['root_pub_key'] === 'string' || data['root_pub_key'] instanceof String)) {
            throw new Error("Expected the field `root_pub_key` to be a primitive type in the JSON string but got " + data['root_pub_key']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['used_node_ids'])) {
            throw new Error("Expected the field `used_node_ids` to be an array in the JSON data but got " + data['used_node_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bip32_path_list'])) {
            throw new Error("Expected the field `bip32_path_list` to be an array in the JSON data but got " + data['bip32_path_list']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['msg_hash_list'])) {
            throw new Error("Expected the field `msg_hash_list` to be an array in the JSON data but got " + data['msg_hash_list']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tweak_list'])) {
            throw new Error("Expected the field `tweak_list` to be an array in the JSON data but got " + data['tweak_list']);
        }
        // ensure the json data is a string
        if (data['task_id'] && !(typeof data['task_id'] === 'string' || data['task_id'] instanceof String)) {
            throw new Error("Expected the field `task_id` to be a primitive type in the JSON string but got " + data['task_id']);
        }
        // ensure the json data is a string
        if (data['biz_task_id'] && !(typeof data['biz_task_id'] === 'string' || data['biz_task_id'] instanceof String)) {
            throw new Error("Expected the field `biz_task_id` to be a primitive type in the JSON string but got " + data['biz_task_id']);
        }

        return true;
    }


}



/**
 * The TSS key share group ID.
 * @member {String} group_id
 */
TSSKeySignRequest.prototype['group_id'] = undefined;

/**
 * The The old TSS key share group's root extended public key.
 * @member {String} root_pub_key
 */
TSSKeySignRequest.prototype['root_pub_key'] = undefined;

/**
 * @member {Array.<String>} used_node_ids
 */
TSSKeySignRequest.prototype['used_node_ids'] = undefined;

/**
 * @member {Array.<String>} bip32_path_list
 */
TSSKeySignRequest.prototype['bip32_path_list'] = undefined;

/**
 * @member {Array.<String>} msg_hash_list
 */
TSSKeySignRequest.prototype['msg_hash_list'] = undefined;

/**
 * @member {Array.<String>} tweak_list
 */
TSSKeySignRequest.prototype['tweak_list'] = undefined;

/**
 * @member {module:model/TSSSignatureType} signature_type
 */
TSSKeySignRequest.prototype['signature_type'] = undefined;

/**
 * @member {module:model/TSSProtocol} tss_protocol
 */
TSSKeySignRequest.prototype['tss_protocol'] = undefined;

/**
 * The task ID.
 * @member {String} task_id
 */
TSSKeySignRequest.prototype['task_id'] = undefined;

/**
 * The business task ID. This field contains the transaction ID.
 * @member {String} biz_task_id
 */
TSSKeySignRequest.prototype['biz_task_id'] = undefined;






export default TSSKeySignRequest;

