/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TravelRuleDepositLegalEntity from './TravelRuleDepositLegalEntity';
import TravelRuleDepositNaturalEntity from './TravelRuleDepositNaturalEntity';

/**
 * The TravelRuleDepositExchangesOrVASPEntityInfo model module.
 * @module model/TravelRuleDepositExchangesOrVASPEntityInfo
 */
class TravelRuleDepositExchangesOrVASPEntityInfo {
    /**
     * Constructs a new <code>TravelRuleDepositExchangesOrVASPEntityInfo</code>.
     * @alias module:model/TravelRuleDepositExchangesOrVASPEntityInfo
     * @param {(module:model/TravelRuleDepositLegalEntity|module:model/TravelRuleDepositNaturalEntity)} instance The actual instance to initialize TravelRuleDepositExchangesOrVASPEntityInfo.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        var discriminatorValue = instance["selected_entity_type"];

        if (discriminatorValue) {
            switch(discriminatorValue) {
                case "LEGAL":
                    this.actualInstance = TravelRuleDepositLegalEntity.constructFromObject(instance);
                    match++;
                    break;
                case "NATURAL":
                    this.actualInstance = TravelRuleDepositNaturalEntity.constructFromObject(instance);
                    match++;
                    break;
                default:
                    errorMessages.push("Unrecognized discriminator value: " + discriminatorValue);
                    break;
            }
            return;
        }

        try {
            if (instance instanceof TravelRuleDepositLegalEntity) {
                this.actualInstance = instance;
            } else if(!!TravelRuleDepositLegalEntity.validateJSON && TravelRuleDepositLegalEntity.validateJSON(instance)){
                // plain JS object
                // create TravelRuleDepositLegalEntity from JS object
                this.actualInstance = TravelRuleDepositLegalEntity.constructFromObject(instance);
            } else {
                if(TravelRuleDepositLegalEntity.constructFromObject(instance)) {
                    if (!!TravelRuleDepositLegalEntity.constructFromObject(instance).toJSON) {
                        if (TravelRuleDepositLegalEntity.constructFromObject(instance).toJSON()) {
                            this.actualInstance = TravelRuleDepositLegalEntity.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = TravelRuleDepositLegalEntity.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TravelRuleDepositLegalEntity
            errorMessages.push("Failed to construct TravelRuleDepositLegalEntity: " + err)
        }

        try {
            if (instance instanceof TravelRuleDepositNaturalEntity) {
                this.actualInstance = instance;
            } else if(!!TravelRuleDepositNaturalEntity.validateJSON && TravelRuleDepositNaturalEntity.validateJSON(instance)){
                // plain JS object
                // create TravelRuleDepositNaturalEntity from JS object
                this.actualInstance = TravelRuleDepositNaturalEntity.constructFromObject(instance);
            } else {
                if(TravelRuleDepositNaturalEntity.constructFromObject(instance)) {
                    if (!!TravelRuleDepositNaturalEntity.constructFromObject(instance).toJSON) {
                        if (TravelRuleDepositNaturalEntity.constructFromObject(instance).toJSON()) {
                            this.actualInstance = TravelRuleDepositNaturalEntity.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = TravelRuleDepositNaturalEntity.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TravelRuleDepositNaturalEntity
            errorMessages.push("Failed to construct TravelRuleDepositNaturalEntity: " + err)
        }

        // if (match > 1) {
        //    throw new Error("Multiple matches found constructing `TravelRuleDepositExchangesOrVASPEntityInfo` with oneOf schemas TravelRuleDepositLegalEntity, TravelRuleDepositNaturalEntity. Input: " + JSON.stringify(instance));
        // } else
        if (match === 0) {
        //    this.actualInstance = null; // clear the actual instance in case there are multiple matches
        //    throw new Error("No match found constructing `TravelRuleDepositExchangesOrVASPEntityInfo` with oneOf schemas TravelRuleDepositLegalEntity, TravelRuleDepositNaturalEntity. Details: " +
        //                    errorMessages.join(", "));
        return;
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>TravelRuleDepositExchangesOrVASPEntityInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TravelRuleDepositExchangesOrVASPEntityInfo} obj Optional instance to populate.
     * @return {module:model/TravelRuleDepositExchangesOrVASPEntityInfo} The populated <code>TravelRuleDepositExchangesOrVASPEntityInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        return new TravelRuleDepositExchangesOrVASPEntityInfo(data);
    }

    /**
     * Gets the actual instance, which can be <code>TravelRuleDepositLegalEntity</code>, <code>TravelRuleDepositNaturalEntity</code>.
     * @return {(module:model/TravelRuleDepositLegalEntity|module:model/TravelRuleDepositNaturalEntity)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>TravelRuleDepositLegalEntity</code>, <code>TravelRuleDepositNaturalEntity</code>.
     * @param {(module:model/TravelRuleDepositLegalEntity|module:model/TravelRuleDepositNaturalEntity)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = TravelRuleDepositExchangesOrVASPEntityInfo.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of TravelRuleDepositExchangesOrVASPEntityInfo from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/TravelRuleDepositExchangesOrVASPEntityInfo} An instance of TravelRuleDepositExchangesOrVASPEntityInfo.
     */
    static fromJSON = function(json_string){
        return TravelRuleDepositExchangesOrVASPEntityInfo.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Specifies the type of entity associated with the transaction. - `LEGAL`: Legal entity. - `NATURAL`: Natural person. 
 * @member {module:model/TravelRuleDepositExchangesOrVASPEntityInfo.SelectedEntityTypeEnum} selected_entity_type
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['selected_entity_type'] = undefined;

/**
 * The legal name of the entity.
 * @member {String} legal_name
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['legal_name'] = undefined;

/**
 * The date of incorporation of the entity. This field is required when either of the following conditions is met: - `is_threshold_reached` is `true` in the response of the [Retrieve transaction limitations](https://www.cobo.com/developers/v2/api-references/travelrule/retrieve-transaction-limitations) operation. - `selected_entity_type` is `LEGAL`. 
 * @member {Date} date_of_incorporation
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['date_of_incorporation'] = undefined;

/**
 * The place of incorporation of the entity. This field is required when either of the following conditions is met: - `is_threshold_reached` is `true` in the response of the [Retrieve transaction limitations](https://www.cobo.com/developers/v2/api-references/travelrule/retrieve-transaction-limitations) operation. - `selected_entity_type` is `LEGAL`. 
 * @member {String} place_of_incorporation
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['place_of_incorporation'] = undefined;

/**
 * The first name of the natural person.
 * @member {String} first_name
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['first_name'] = undefined;

/**
 * The last name of the natural person.
 * @member {String} last_name
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['last_name'] = undefined;

/**
 * The date of birth of the natural person. This field is required when either of the following conditions is met: - `is_threshold_reached` is `true` in the response of the [Retrieve transaction limitations](https://www.cobo.com/developers/v2/api-references/travelrule/retrieve-transaction-limitations) operation. - `selected_entity_type` is `NATURAL`. 
 * @member {Date} date_of_birth
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['date_of_birth'] = undefined;

/**
 * The place of birth of the natural person. This field is required when either of the following conditions is met: - `is_threshold_reached` is `true` in the response of the [Retrieve transaction limitations](https://www.cobo.com/developers/v2/api-references/travelrule/retrieve-transaction-limitations) operation. - `selected_entity_type` is `NATURAL`. 
 * @member {String} place_of_birth
 */
TravelRuleDepositExchangesOrVASPEntityInfo.prototype['place_of_birth'] = undefined;


TravelRuleDepositExchangesOrVASPEntityInfo.OneOf = ["TravelRuleDepositLegalEntity", "TravelRuleDepositNaturalEntity"];

export default TravelRuleDepositExchangesOrVASPEntityInfo;

