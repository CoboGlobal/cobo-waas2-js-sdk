/**
 * Cobo Wallet as a Service 2.0
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookEventDataType model module.
 * @module model/WebhookEventDataType
 * @version 1.0.0
 */
class WebhookEventDataType {
    /**
     * Constructs a new <code>WebhookEventDataType</code>.
     * The data type of the event.
     * @alias module:model/WebhookEventDataType
     * @param data_type {module:model/WebhookEventDataType.DataTypeEnum} The data type of the event. When `data_type` is `Transaction`, it means the event uses the `transaction` schema as its data type.
     */
    constructor(data_type) { 
        
        WebhookEventDataType.initialize(this, data_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data_type) { 
        obj['data_type'] = data_type;
    }

    /**
     * Constructs a <code>WebhookEventDataType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookEventDataType} obj Optional instance to populate.
     * @return {module:model/WebhookEventDataType} The populated <code>WebhookEventDataType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookEventDataType();

            if (data.hasOwnProperty('data_type')) {
                obj['data_type'] = ApiClient.convertToType(data['data_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookEventDataType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookEventDataType</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookEventDataType.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['data_type'] && !(typeof data['data_type'] === 'string' || data['data_type'] instanceof String)) {
            throw new Error("Expected the field `data_type` to be a primitive type in the JSON string but got " + data['data_type']);
        }

        return true;
    }


}

WebhookEventDataType.RequiredProperties = ["data_type"];

/**
 * The data type of the event. When `data_type` is `Transaction`, it means the event uses the `transaction` schema as its data type.
 * @member {module:model/WebhookEventDataType.DataTypeEnum} data_type
 */
WebhookEventDataType.prototype['data_type'] = undefined;





/**
 * Allowed values for the <code>data_type</code> property.
 * @enum {String}
 * @readonly
 */
WebhookEventDataType['DataTypeEnum'] = {

    /**
     * value: "Transaction"
     * @const
     */
    "Transaction": "Transaction",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};



export default WebhookEventDataType;

