/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WalletType from './WalletType';

/**
 * The AddressBook model module.
 * @module model/AddressBook
 */
class AddressBook {
    /**
     * Constructs a new <code>AddressBook</code>.
     * The data for address book entry information.
     * @alias module:model/AddressBook
     * @param org_id {String} 
     * @param entry_id {String} 
     * @param address {String} address.
     * @param label {String} The label to address.
     */
    constructor(org_id, entry_id, address, label) { 
        
        AddressBook.initialize(this, org_id, entry_id, address, label);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, org_id, entry_id, address, label) { 
        obj['org_id'] = org_id;
        obj['entry_id'] = entry_id;
        obj['address'] = address;
        obj['label'] = label;
    }

    /**
     * Constructs a <code>AddressBook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressBook} obj Optional instance to populate.
     * @return {module:model/AddressBook} The populated <code>AddressBook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressBook();

            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'String');
            }
            if (data.hasOwnProperty('entry_id')) {
                obj['entry_id'] = ApiClient.convertToType(data['entry_id'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('wallet_name')) {
                obj['wallet_name'] = ApiClient.convertToType(data['wallet_name'], 'String');
            }
            if (data.hasOwnProperty('wallet_type')) {
                obj['wallet_type'] = WalletType.constructFromObject(data['wallet_type']);
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressBook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressBook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddressBook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['org_id'] && !(typeof data['org_id'] === 'string' || data['org_id'] instanceof String)) {
            throw new Error("Expected the field `org_id` to be a primitive type in the JSON string but got " + data['org_id']);
        }
        // ensure the json data is a string
        if (data['entry_id'] && !(typeof data['entry_id'] === 'string' || data['entry_id'] instanceof String)) {
            throw new Error("Expected the field `entry_id` to be a primitive type in the JSON string but got " + data['entry_id']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['wallet_name'] && !(typeof data['wallet_name'] === 'string' || data['wallet_name'] instanceof String)) {
            throw new Error("Expected the field `wallet_name` to be a primitive type in the JSON string but got " + data['wallet_name']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }

        return true;
    }


}

AddressBook.RequiredProperties = ["org_id", "entry_id", "address", "label"];

/**
 * @member {String} org_id
 */
AddressBook.prototype['org_id'] = undefined;

/**
 * @member {String} entry_id
 */
AddressBook.prototype['entry_id'] = undefined;

/**
 * address.
 * @member {String} address
 */
AddressBook.prototype['address'] = undefined;

/**
 * memo.
 * @member {String} memo
 */
AddressBook.prototype['memo'] = undefined;

/**
 * wallet name.
 * @member {String} wallet_name
 */
AddressBook.prototype['wallet_name'] = undefined;

/**
 * @member {module:model/WalletType} wallet_type
 */
AddressBook.prototype['wallet_type'] = undefined;

/**
 * The label to address.
 * @member {String} label
 */
AddressBook.prototype['label'] = undefined;

/**
 * email.
 * @member {String} email
 */
AddressBook.prototype['email'] = undefined;






export default AddressBook;

