/**
 * Cobo Wallet as a Service 2.0
 * Cobo WaaS 2.0 enables you to programmatically access Cobo's full suite of crypto wallet technologies with powerful and flexible access controls.  # Wallet technologies - Custodial Wallet - MPC Wallet - Smart Contract Wallet (Based on Safe{Wallet}) - Exchange Wallet  # Risk Control technologies - Workflow - Access Control List (ACL)  # Risk Control targets - Wallet Management   - User/team and their permission management   - Risk control configurations, e.g. whitelist, blacklist, rate-limiting etc. - Blockchain Interaction   - Crypto transfer   - Smart Contract Invocation  # Important HTTPS only. RESTful, resource oriented  # Get Started Set up your APIs or get authorization  # Authentication and Authorization CoboAuth  # Request and Response application/json  # Error Handling  ### Common error codes | Error Code | Description | | -- | -- |  ### API-specific error codes For error codes that are dedicated to a specific API, see the Error codes section in each API specification, for example, /v3/wallets.  # Rate and Usage Limiting  # Idempotent Request  # Pagination # Support [Developer Hub](https://cobo.com/developers) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class TransactionSubStatus.
* @enum {}
* @readonly
*/
export default class TransactionSubStatus {
    
        /**
         * value: "RejectedKYT"
         * @const
         */
        "RejectedKYT" = "RejectedKYT";

    
        /**
         * value: "RejectedTravelRule"
         * @const
         */
        "RejectedTravelRule" = "RejectedTravelRule";

    
        /**
         * value: "PendingDoubleCheck"
         * @const
         */
        "PendingDoubleCheck" = "PendingDoubleCheck";

    
        /**
         * value: "PendingSpenderCheck"
         * @const
         */
        "PendingSpenderCheck" = "PendingSpenderCheck";

    
        /**
         * value: "PendingRiskControlCheck"
         * @const
         */
        "PendingRiskControlCheck" = "PendingRiskControlCheck";

    
        /**
         * value: "PendingApproverCheck"
         * @const
         */
        "PendingApproverCheck" = "PendingApproverCheck";

    
        /**
         * value: "RejectedCoboCheck"
         * @const
         */
        "RejectedCoboCheck" = "RejectedCoboCheck";

    
        /**
         * value: "RejectedWhiteList"
         * @const
         */
        "RejectedWhiteList" = "RejectedWhiteList";

    
        /**
         * value: "RejectedDoubleCheck"
         * @const
         */
        "RejectedDoubleCheck" = "RejectedDoubleCheck";

    
        /**
         * value: "RejectedSpenderAuth"
         * @const
         */
        "RejectedSpenderAuth" = "RejectedSpenderAuth";

    
        /**
         * value: "RejectedRiskControlCheck"
         * @const
         */
        "RejectedRiskControlCheck" = "RejectedRiskControlCheck";

    
        /**
         * value: "RejectedApproverAuth"
         * @const
         */
        "RejectedApproverAuth" = "RejectedApproverAuth";

    
        /**
         * value: "PendingWaitSigner"
         * @const
         */
        "PendingWaitSigner" = "PendingWaitSigner";

    
        /**
         * value: "FailedBySigner"
         * @const
         */
        "FailedBySigner" = "FailedBySigner";

    
        /**
         * value: "FailedBroadcasting"
         * @const
         */
        "FailedBroadcasting" = "FailedBroadcasting";

    

    /**
    * Returns a <code>TransactionSubStatus</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/TransactionSubStatus} The enum <code>TransactionSubStatus</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

