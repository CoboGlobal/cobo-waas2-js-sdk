/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionCosmosMessage from './TransactionCosmosMessage';
import TransactionDestinationType from './TransactionDestinationType';

/**
 * The TransactionCosmosContractDestination model module.
 * @module model/TransactionCosmosContractDestination
 */
class TransactionCosmosContractDestination {
    /**
     * Constructs a new <code>TransactionCosmosContractDestination</code>.
     * Information about the transaction destination type &#x60;COSMOS_Contract&#x60;. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.  Switch between the tabs to display the properties for different transaction destinations. 
     * @alias module:model/TransactionCosmosContractDestination
     * @param destination_type {module:model/TransactionDestinationType} 
     * @param cosmos_messages {Array.<module:model/TransactionCosmosMessage>} 
     */
    constructor(destination_type, cosmos_messages) { 
        
        TransactionCosmosContractDestination.initialize(this, destination_type, cosmos_messages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination_type, cosmos_messages) { 
        obj['destination_type'] = destination_type;
        obj['cosmos_messages'] = cosmos_messages;
    }

    /**
     * Constructs a <code>TransactionCosmosContractDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionCosmosContractDestination} obj Optional instance to populate.
     * @return {module:model/TransactionCosmosContractDestination} The populated <code>TransactionCosmosContractDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionCosmosContractDestination();

            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = TransactionDestinationType.constructFromObject(data['destination_type']);
            }
            if (data.hasOwnProperty('cosmos_messages')) {
                obj['cosmos_messages'] = ApiClient.convertToType(data['cosmos_messages'], [TransactionCosmosMessage]);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionCosmosContractDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionCosmosContractDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionCosmosContractDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['cosmos_messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cosmos_messages'])) {
                throw new Error("Expected the field `cosmos_messages` to be an array in the JSON data but got " + data['cosmos_messages']);
            }
            // validate the optional field `cosmos_messages` (array)
            for (const item of data['cosmos_messages']) {
                TransactionCosmosMessage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

TransactionCosmosContractDestination.RequiredProperties = ["destination_type", "cosmos_messages"];

/**
 * @member {module:model/TransactionDestinationType} destination_type
 */
TransactionCosmosContractDestination.prototype['destination_type'] = undefined;

/**
 * @member {Array.<module:model/TransactionCosmosMessage>} cosmos_messages
 */
TransactionCosmosContractDestination.prototype['cosmos_messages'] = undefined;

/**
 * The transfer amount. For example, if you trade 1.5 ETH, then the value is `1.5`. 
 * @member {String} value
 */
TransactionCosmosContractDestination.prototype['value'] = undefined;






export default TransactionCosmosContractDestination;

