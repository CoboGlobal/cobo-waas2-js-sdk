/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionApprovalResult from './TransactionApprovalResult';

/**
 * The TransactionUserApprovalDetail model module.
 * @module model/TransactionUserApprovalDetail
 */
class TransactionUserApprovalDetail {
    /**
     * Constructs a new <code>TransactionUserApprovalDetail</code>.
     * The user approval data for transaction.
     * @alias module:model/TransactionUserApprovalDetail
     */
    constructor() { 
        
        TransactionUserApprovalDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionUserApprovalDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionUserApprovalDetail} obj Optional instance to populate.
     * @return {module:model/TransactionUserApprovalDetail} The populated <code>TransactionUserApprovalDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionUserApprovalDetail();

            if (data.hasOwnProperty('pubkey')) {
                obj['pubkey'] = ApiClient.convertToType(data['pubkey'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = TransactionApprovalResult.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('message_version')) {
                obj['message_version'] = ApiClient.convertToType(data['message_version'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('extra_message')) {
                obj['extra_message'] = ApiClient.convertToType(data['extra_message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionUserApprovalDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionUserApprovalDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pubkey'] && !(typeof data['pubkey'] === 'string' || data['pubkey'] instanceof String)) {
            throw new Error("Expected the field `pubkey` to be a primitive type in the JSON string but got " + data['pubkey']);
        }
        // ensure the json data is a string
        if (data['signature'] && !(typeof data['signature'] === 'string' || data['signature'] instanceof String)) {
            throw new Error("Expected the field `signature` to be a primitive type in the JSON string but got " + data['signature']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['message_version'] && !(typeof data['message_version'] === 'string' || data['message_version'] instanceof String)) {
            throw new Error("Expected the field `message_version` to be a primitive type in the JSON string but got " + data['message_version']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['extra_message'] && !(typeof data['extra_message'] === 'string' || data['extra_message'] instanceof String)) {
            throw new Error("Expected the field `extra_message` to be a primitive type in the JSON string but got " + data['extra_message']);
        }

        return true;
    }


}



/**
 * The gaurd pubkey of the user who audited the message.
 * @member {String} pubkey
 */
TransactionUserApprovalDetail.prototype['pubkey'] = undefined;

/**
 * @member {module:model/TransactionApprovalResult} result
 */
TransactionUserApprovalDetail.prototype['result'] = undefined;

/**
 * Signature of the audited message.
 * @member {String} signature
 */
TransactionUserApprovalDetail.prototype['signature'] = undefined;

/**
 * The language of the audited message.
 * @member {String} language
 */
TransactionUserApprovalDetail.prototype['language'] = undefined;

/**
 * Version of the audited message.
 * @member {String} message_version
 */
TransactionUserApprovalDetail.prototype['message_version'] = undefined;

/**
 * The audited message.
 * @member {String} message
 */
TransactionUserApprovalDetail.prototype['message'] = undefined;

/**
 * The extra audited message.
 * @member {String} extra_message
 */
TransactionUserApprovalDetail.prototype['extra_message'] = undefined;






export default TransactionUserApprovalDetail;

