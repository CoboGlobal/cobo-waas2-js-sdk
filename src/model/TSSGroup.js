/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TSSCurveType from './TSSCurveType';
import TSSGroupType from './TSSGroupType';
import TSSParticipant from './TSSParticipant';

/**
 * The TSSGroup model module.
 * @module model/TSSGroup
 */
class TSSGroup {
    /**
     * Constructs a new <code>TSSGroup</code>.
     * @alias module:model/TSSGroup
     */
    constructor() { 
        
        TSSGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TSSGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TSSGroup} obj Optional instance to populate.
     * @return {module:model/TSSGroup} The populated <code>TSSGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TSSGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('canonical_group_id')) {
                obj['canonical_group_id'] = ApiClient.convertToType(data['canonical_group_id'], 'String');
            }
            if (data.hasOwnProperty('protocol_group_id')) {
                obj['protocol_group_id'] = ApiClient.convertToType(data['protocol_group_id'], 'String');
            }
            if (data.hasOwnProperty('protocol_type')) {
                obj['protocol_type'] = ApiClient.convertToType(data['protocol_type'], 'String');
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = TSSGroupType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('root_extended_public_key')) {
                obj['root_extended_public_key'] = ApiClient.convertToType(data['root_extended_public_key'], 'String');
            }
            if (data.hasOwnProperty('chaincode')) {
                obj['chaincode'] = ApiClient.convertToType(data['chaincode'], 'String');
            }
            if (data.hasOwnProperty('curve')) {
                obj['curve'] = TSSCurveType.constructFromObject(data['curve']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('participants')) {
                obj['participants'] = ApiClient.convertToType(data['participants'], [TSSParticipant]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TSSGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TSSGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['canonical_group_id'] && !(typeof data['canonical_group_id'] === 'string' || data['canonical_group_id'] instanceof String)) {
            throw new Error("Expected the field `canonical_group_id` to be a primitive type in the JSON string but got " + data['canonical_group_id']);
        }
        // ensure the json data is a string
        if (data['protocol_group_id'] && !(typeof data['protocol_group_id'] === 'string' || data['protocol_group_id'] instanceof String)) {
            throw new Error("Expected the field `protocol_group_id` to be a primitive type in the JSON string but got " + data['protocol_group_id']);
        }
        // ensure the json data is a string
        if (data['protocol_type'] && !(typeof data['protocol_type'] === 'string' || data['protocol_type'] instanceof String)) {
            throw new Error("Expected the field `protocol_type` to be a primitive type in the JSON string but got " + data['protocol_type']);
        }
        // ensure the json data is a string
        if (data['root_extended_public_key'] && !(typeof data['root_extended_public_key'] === 'string' || data['root_extended_public_key'] instanceof String)) {
            throw new Error("Expected the field `root_extended_public_key` to be a primitive type in the JSON string but got " + data['root_extended_public_key']);
        }
        // ensure the json data is a string
        if (data['chaincode'] && !(typeof data['chaincode'] === 'string' || data['chaincode'] instanceof String)) {
            throw new Error("Expected the field `chaincode` to be a primitive type in the JSON string but got " + data['chaincode']);
        }
        if (data['participants']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['participants'])) {
                throw new Error("Expected the field `participants` to be an array in the JSON data but got " + data['participants']);
            }
            // validate the optional field `participants` (array)
            for (const item of data['participants']) {
                TSSParticipant.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The TSS key share group ID.
 * @member {String} id
 */
TSSGroup.prototype['id'] = undefined;

/**
 * The canonical group ID.
 * @member {String} canonical_group_id
 */
TSSGroup.prototype['canonical_group_id'] = undefined;

/**
 * The protocol group ID.
 * @member {String} protocol_group_id
 */
TSSGroup.prototype['protocol_group_id'] = undefined;

/**
 * The protocol type.
 * @member {String} protocol_type
 */
TSSGroup.prototype['protocol_type'] = undefined;

/**
 * The group creation timestamp, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
TSSGroup.prototype['created_timestamp'] = undefined;

/**
 * @member {module:model/TSSGroupType} type
 */
TSSGroup.prototype['type'] = undefined;

/**
 * The root extended public key.
 * @member {String} root_extended_public_key
 */
TSSGroup.prototype['root_extended_public_key'] = undefined;

/**
 * The chaincode.
 * @member {String} chaincode
 */
TSSGroup.prototype['chaincode'] = undefined;

/**
 * @member {module:model/TSSCurveType} curve
 */
TSSGroup.prototype['curve'] = undefined;

/**
 * The threshold.
 * @member {Number} threshold
 */
TSSGroup.prototype['threshold'] = undefined;

/**
 * @member {Array.<module:model/TSSParticipant>} participants
 */
TSSGroup.prototype['participants'] = undefined;






export default TSSGroup;

