/**
 * Cobo Wallet as a Service 2.0
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateKeyGroupRequestKeyHoldersInner from './CreateKeyGroupRequestKeyHoldersInner';
import KeyGroupType from './KeyGroupType';

/**
 * The CreateKeyGroupRequest model module.
 * @module model/CreateKeyGroupRequest
 * @version 0.1.0
 */
class CreateKeyGroupRequest {
    /**
     * Constructs a new <code>CreateKeyGroupRequest</code>.
     * @alias module:model/CreateKeyGroupRequest
     * @param groupType {module:model/KeyGroupType} 
     * @param nodeCount {Number} The count of tss node of the key group
     * @param threshold {Number} The threshold number of tss node required for signature
     * @param keyHolders {Array.<module:model/CreateKeyGroupRequestKeyHoldersInner>} 
     */
    constructor(groupType, nodeCount, threshold, keyHolders) { 
        
        CreateKeyGroupRequest.initialize(this, groupType, nodeCount, threshold, keyHolders);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupType, nodeCount, threshold, keyHolders) { 
        obj['group_type'] = groupType;
        obj['node_count'] = nodeCount;
        obj['threshold'] = threshold;
        obj['key_holders'] = keyHolders;
    }

    /**
     * Constructs a <code>CreateKeyGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateKeyGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateKeyGroupRequest} The populated <code>CreateKeyGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateKeyGroupRequest();

            if (data.hasOwnProperty('group_type')) {
                obj['group_type'] = KeyGroupType.constructFromObject(data['group_type']);
            }
            if (data.hasOwnProperty('node_count')) {
                obj['node_count'] = ApiClient.convertToType(data['node_count'], 'Number');
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('key_holders')) {
                obj['key_holders'] = ApiClient.convertToType(data['key_holders'], [CreateKeyGroupRequestKeyHoldersInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateKeyGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateKeyGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateKeyGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['key_holders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['key_holders'])) {
                throw new Error("Expected the field `key_holders` to be an array in the JSON data but got " + data['key_holders']);
            }
            // validate the optional field `key_holders` (array)
            for (const item of data['key_holders']) {
                CreateKeyGroupRequestKeyHoldersInner.validateJSON(item);
            };
        }

        return true;
    }


}

CreateKeyGroupRequest.RequiredProperties = ["group_type", "node_count", "threshold", "key_holders"];

/**
 * @member {module:model/KeyGroupType} group_type
 */
CreateKeyGroupRequest.prototype['group_type'] = undefined;

/**
 * The count of tss node of the key group
 * @member {Number} node_count
 */
CreateKeyGroupRequest.prototype['node_count'] = undefined;

/**
 * The threshold number of tss node required for signature
 * @member {Number} threshold
 */
CreateKeyGroupRequest.prototype['threshold'] = undefined;

/**
 * @member {Array.<module:model/CreateKeyGroupRequestKeyHoldersInner>} key_holders
 */
CreateKeyGroupRequest.prototype['key_holders'] = undefined;






export default CreateKeyGroupRequest;

