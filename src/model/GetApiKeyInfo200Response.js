/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoleScopes from './RoleScopes';

/**
 * The GetApiKeyInfo200Response model module.
 * @module model/GetApiKeyInfo200Response
 */
class GetApiKeyInfo200Response {
    /**
     * Constructs a new <code>GetApiKeyInfo200Response</code>.
     * @alias module:model/GetApiKeyInfo200Response
     * @param name {String} The API key name.
     * @param curve_type {module:model/GetApiKeyInfo200Response.CurveTypeEnum} The curve type used for the API key, which determines the cryptographic algorithm for key generation and signing. Possible values include: - `ED25519`: Ed25519 - `SECP256K1`: Secp256k1 
     * @param key {String} The API key value.
     * @param created_timestamp {Number} The time when the API key was registered, in Unix timestamp format, measured in milliseconds.
     * @param updated_timestamp {Number} The time when the API key information was last updated, in Unix timestamp format, measured in milliseconds.
     */
    constructor(name, curve_type, key, created_timestamp, updated_timestamp) { 
        
        GetApiKeyInfo200Response.initialize(this, name, curve_type, key, created_timestamp, updated_timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, curve_type, key, created_timestamp, updated_timestamp) { 
        obj['name'] = name;
        obj['curve_type'] = curve_type;
        obj['key'] = key;
        obj['created_timestamp'] = created_timestamp;
        obj['updated_timestamp'] = updated_timestamp;
    }

    /**
     * Constructs a <code>GetApiKeyInfo200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetApiKeyInfo200Response} obj Optional instance to populate.
     * @return {module:model/GetApiKeyInfo200Response} The populated <code>GetApiKeyInfo200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetApiKeyInfo200Response();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('curve_type')) {
                obj['curve_type'] = ApiClient.convertToType(data['curve_type'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('valid_ips')) {
                obj['valid_ips'] = ApiClient.convertToType(data['valid_ips'], ['String']);
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('updated_timestamp')) {
                obj['updated_timestamp'] = ApiClient.convertToType(data['updated_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('expired_timestamp')) {
                obj['expired_timestamp'] = ApiClient.convertToType(data['expired_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('role_scopes')) {
                obj['role_scopes'] = ApiClient.convertToType(data['role_scopes'], [RoleScopes]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetApiKeyInfo200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetApiKeyInfo200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetApiKeyInfo200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['curve_type'] && !(typeof data['curve_type'] === 'string' || data['curve_type'] instanceof String)) {
            throw new Error("Expected the field `curve_type` to be a primitive type in the JSON string but got " + data['curve_type']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['valid_ips'])) {
            throw new Error("Expected the field `valid_ips` to be an array in the JSON data but got " + data['valid_ips']);
        }
        if (data['role_scopes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['role_scopes'])) {
                throw new Error("Expected the field `role_scopes` to be an array in the JSON data but got " + data['role_scopes']);
            }
            // validate the optional field `role_scopes` (array)
            for (const item of data['role_scopes']) {
                RoleScopes.validateJSON(item);
            };
        }

        return true;
    }


}

GetApiKeyInfo200Response.RequiredProperties = ["name", "curve_type", "key", "created_timestamp", "updated_timestamp"];

/**
 * The API key name.
 * @member {String} name
 */
GetApiKeyInfo200Response.prototype['name'] = undefined;

/**
 * The curve type used for the API key, which determines the cryptographic algorithm for key generation and signing. Possible values include: - `ED25519`: Ed25519 - `SECP256K1`: Secp256k1 
 * @member {module:model/GetApiKeyInfo200Response.CurveTypeEnum} curve_type
 */
GetApiKeyInfo200Response.prototype['curve_type'] = undefined;

/**
 * The API key value.
 * @member {String} key
 */
GetApiKeyInfo200Response.prototype['key'] = undefined;

/**
 * The URL of the callback endpoint that receives callback messages triggered by this API key.
 * @member {String} callback_url
 */
GetApiKeyInfo200Response.prototype['callback_url'] = undefined;

/**
 * (Applicable to permanent API keys only) The list of IP addresses that are allowed to use this API key.
 * @member {Array.<String>} valid_ips
 */
GetApiKeyInfo200Response.prototype['valid_ips'] = undefined;

/**
 * The time when the API key was registered, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
GetApiKeyInfo200Response.prototype['created_timestamp'] = undefined;

/**
 * The time when the API key information was last updated, in Unix timestamp format, measured in milliseconds.
 * @member {Number} updated_timestamp
 */
GetApiKeyInfo200Response.prototype['updated_timestamp'] = undefined;

/**
 * The time when the API key expires, in Unix timestamp format, measured in milliseconds. For permanent API keys, this property value is `null`.
 * @member {Number} expired_timestamp
 */
GetApiKeyInfo200Response.prototype['expired_timestamp'] = undefined;

/**
 * The list of user roles and wallet scopes associated with the API key.
 * @member {Array.<module:model/RoleScopes>} role_scopes
 */
GetApiKeyInfo200Response.prototype['role_scopes'] = undefined;





/**
 * Allowed values for the <code>curve_type</code> property.
 * @enum {String}
 * @readonly
 */
GetApiKeyInfo200Response['CurveTypeEnum'] = {

    /**
     * value: "ED25519"
     * @const
     */
    "ED25519": "ED25519",

    /**
     * value: "SECP256K1"
     * @const
     */
    "SECP256K1": "SECP256K1",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};



export default GetApiKeyInfo200Response;

