/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TokenizationTokenPermissionType from './TokenizationTokenPermissionType';

/**
 * The TokenizationAddressPermission model module.
 * @module model/TokenizationAddressPermission
 */
class TokenizationAddressPermission {
    /**
     * Constructs a new <code>TokenizationAddressPermission</code>.
     * @alias module:model/TokenizationAddressPermission
     * @param execution_address {String} The execution address.
     * @param permissions {Array.<module:model/TokenizationTokenPermissionType>} List of permissions granted to this address.
     */
    constructor(execution_address, permissions) { 
        
        TokenizationAddressPermission.initialize(this, execution_address, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, execution_address, permissions) { 
        obj['execution_address'] = execution_address;
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>TokenizationAddressPermission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenizationAddressPermission} obj Optional instance to populate.
     * @return {module:model/TokenizationAddressPermission} The populated <code>TokenizationAddressPermission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenizationAddressPermission();

            if (data.hasOwnProperty('execution_address')) {
                obj['execution_address'] = ApiClient.convertToType(data['execution_address'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [TokenizationTokenPermissionType]);
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenizationAddressPermission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenizationAddressPermission</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TokenizationAddressPermission.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['execution_address'] && !(typeof data['execution_address'] === 'string' || data['execution_address'] instanceof String)) {
            throw new Error("Expected the field `execution_address` to be a primitive type in the JSON string but got " + data['execution_address']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }

        return true;
    }


}

TokenizationAddressPermission.RequiredProperties = ["execution_address", "permissions"];

/**
 * The execution address.
 * @member {String} execution_address
 */
TokenizationAddressPermission.prototype['execution_address'] = undefined;

/**
 * List of permissions granted to this address.
 * @member {Array.<module:model/TokenizationTokenPermissionType>} permissions
 */
TokenizationAddressPermission.prototype['permissions'] = undefined;

/**
 * The time when the permission was created, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
TokenizationAddressPermission.prototype['created_timestamp'] = undefined;






export default TokenizationAddressPermission;

