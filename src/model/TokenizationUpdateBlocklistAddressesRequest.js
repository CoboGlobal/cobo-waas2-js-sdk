/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TokenizationAppInitiator from './TokenizationAppInitiator';
import TokenizationTokenOperationSource from './TokenizationTokenOperationSource';
import TokenizationUpdateAddressAction from './TokenizationUpdateAddressAction';
import TokenizationUpdateBlocklistAddressesParams from './TokenizationUpdateBlocklistAddressesParams';
import TokenizationUpdateBlocklistAddressesParamsAddressesInner from './TokenizationUpdateBlocklistAddressesParamsAddressesInner';
import TransactionRequestFee from './TransactionRequestFee';

/**
 * The TokenizationUpdateBlocklistAddressesRequest model module.
 * @module model/TokenizationUpdateBlocklistAddressesRequest
 */
class TokenizationUpdateBlocklistAddressesRequest {
    /**
     * Constructs a new <code>TokenizationUpdateBlocklistAddressesRequest</code>.
     * @alias module:model/TokenizationUpdateBlocklistAddressesRequest
     * @implements module:model/TokenizationUpdateBlocklistAddressesParams
     * @implements module:model/TokenizationAppInitiator
     * @param action {module:model/TokenizationUpdateAddressAction} 
     * @param source {module:model/TokenizationTokenOperationSource} 
     * @param addresses {Array.<module:model/TokenizationUpdateBlocklistAddressesParamsAddressesInner>} A list of addresses to manage. For 'add' operations, notes can be provided. For 'remove' operations, notes are ignored.
     * @param fee {module:model/TransactionRequestFee} 
     */
    constructor(action, source, addresses, fee) { 
        TokenizationUpdateBlocklistAddressesParams.initialize(this, action, source, addresses);TokenizationAppInitiator.initialize(this);
        TokenizationUpdateBlocklistAddressesRequest.initialize(this, action, source, addresses, fee);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, source, addresses, fee) { 
        obj['action'] = action;
        obj['source'] = source;
        obj['addresses'] = addresses;
        obj['fee'] = fee;
    }

    /**
     * Constructs a <code>TokenizationUpdateBlocklistAddressesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenizationUpdateBlocklistAddressesRequest} obj Optional instance to populate.
     * @return {module:model/TokenizationUpdateBlocklistAddressesRequest} The populated <code>TokenizationUpdateBlocklistAddressesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenizationUpdateBlocklistAddressesRequest();
            TokenizationUpdateBlocklistAddressesParams.constructFromObject(data, obj);
            TokenizationAppInitiator.constructFromObject(data, obj);

            if (data.hasOwnProperty('action')) {
                obj['action'] = TokenizationUpdateAddressAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = TokenizationTokenOperationSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [TokenizationUpdateBlocklistAddressesParamsAddressesInner]);
            }
            if (data.hasOwnProperty('app_initiator')) {
                obj['app_initiator'] = ApiClient.convertToType(data['app_initiator'], 'String');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = TransactionRequestFee.constructFromObject(data['fee']);
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenizationUpdateBlocklistAddressesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenizationUpdateBlocklistAddressesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TokenizationUpdateBlocklistAddressesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          if (!!TokenizationTokenOperationSource.validateJSON) {
            TokenizationTokenOperationSource.validateJSON(data['source']);
          }
        }
        if (data['addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addresses'])) {
                throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
            }
            // validate the optional field `addresses` (array)
            for (const item of data['addresses']) {
                TokenizationUpdateBlocklistAddressesParamsAddressesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['app_initiator'] && !(typeof data['app_initiator'] === 'string' || data['app_initiator'] instanceof String)) {
            throw new Error("Expected the field `app_initiator` to be a primitive type in the JSON string but got " + data['app_initiator']);
        }
        // validate the optional field `fee`
        if (data['fee']) { // data not null
          if (!!TransactionRequestFee.validateJSON) {
            TransactionRequestFee.validateJSON(data['fee']);
          }
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }

        return true;
    }


}

TokenizationUpdateBlocklistAddressesRequest.RequiredProperties = ["action", "source", "addresses", "fee"];

/**
 * @member {module:model/TokenizationUpdateAddressAction} action
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['action'] = undefined;

/**
 * @member {module:model/TokenizationTokenOperationSource} source
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['source'] = undefined;

/**
 * A list of addresses to manage. For 'add' operations, notes can be provided. For 'remove' operations, notes are ignored.
 * @member {Array.<module:model/TokenizationUpdateBlocklistAddressesParamsAddressesInner>} addresses
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['addresses'] = undefined;

/**
 * The initiator of the tokenization activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
 * @member {String} app_initiator
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['app_initiator'] = undefined;

/**
 * @member {module:model/TransactionRequestFee} fee
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['fee'] = undefined;

/**
 * The request ID that is used to track a transaction request. The request ID is provided by you and must be unique within your organization.
 * @member {String} request_id
 */
TokenizationUpdateBlocklistAddressesRequest.prototype['request_id'] = undefined;


// Implement TokenizationUpdateBlocklistAddressesParams interface:
/**
 * @member {module:model/TokenizationUpdateAddressAction} action
 */
TokenizationUpdateBlocklistAddressesParams.prototype['action'] = undefined;
/**
 * @member {module:model/TokenizationTokenOperationSource} source
 */
TokenizationUpdateBlocklistAddressesParams.prototype['source'] = undefined;
/**
 * A list of addresses to manage. For 'add' operations, notes can be provided. For 'remove' operations, notes are ignored.
 * @member {Array.<module:model/TokenizationUpdateBlocklistAddressesParamsAddressesInner>} addresses
 */
TokenizationUpdateBlocklistAddressesParams.prototype['addresses'] = undefined;
// Implement TokenizationAppInitiator interface:
/**
 * The initiator of the tokenization activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
 * @member {String} app_initiator
 */
TokenizationAppInitiator.prototype['app_initiator'] = undefined;




export default TokenizationUpdateBlocklistAddressesRequest;

