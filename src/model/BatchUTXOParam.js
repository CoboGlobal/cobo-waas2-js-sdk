/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchUTXOParam model module.
 * @module model/BatchUTXOParam
 */
class BatchUTXOParam {
    /**
     * Constructs a new <code>BatchUTXOParam</code>.
     * The UTXO information.
     * @alias module:model/BatchUTXOParam
     * @param tx_hash {String} The transaction hash.
     */
    constructor(tx_hash) { 
        
        BatchUTXOParam.initialize(this, tx_hash);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tx_hash) { 
        obj['tx_hash'] = tx_hash;
    }

    /**
     * Constructs a <code>BatchUTXOParam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchUTXOParam} obj Optional instance to populate.
     * @return {module:model/BatchUTXOParam} The populated <code>BatchUTXOParam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchUTXOParam();

            if (data.hasOwnProperty('tx_hash')) {
                obj['tx_hash'] = ApiClient.convertToType(data['tx_hash'], 'String');
            }
            if (data.hasOwnProperty('vout_ns')) {
                obj['vout_ns'] = ApiClient.convertToType(data['vout_ns'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchUTXOParam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchUTXOParam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchUTXOParam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['tx_hash'] && !(typeof data['tx_hash'] === 'string' || data['tx_hash'] instanceof String)) {
            throw new Error("Expected the field `tx_hash` to be a primitive type in the JSON string but got " + data['tx_hash']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vout_ns'])) {
            throw new Error("Expected the field `vout_ns` to be an array in the JSON data but got " + data['vout_ns']);
        }

        return true;
    }


}

BatchUTXOParam.RequiredProperties = ["tx_hash"];

/**
 * The transaction hash.
 * @member {String} tx_hash
 */
BatchUTXOParam.prototype['tx_hash'] = undefined;

/**
 * @member {Array.<Number>} vout_ns
 */
BatchUTXOParam.prototype['vout_ns'] = undefined;






export default BatchUTXOParam;

