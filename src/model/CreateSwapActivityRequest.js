/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateSwapActivityRequest model module.
 * @module model/CreateSwapActivityRequest
 */
class CreateSwapActivityRequest {
    /**
     * Constructs a new <code>CreateSwapActivityRequest</code>.
     * @alias module:model/CreateSwapActivityRequest
     * @param wallet_id {String} The unique identifier of the wallet.
     * @param quote_id {String} The unique identifier of the quote.
     * @param slippage_tolerance {String} The slippage tolerance for the swap.
     */
    constructor(wallet_id, quote_id, slippage_tolerance) { 
        
        CreateSwapActivityRequest.initialize(this, wallet_id, quote_id, slippage_tolerance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, wallet_id, quote_id, slippage_tolerance) { 
        obj['wallet_id'] = wallet_id;
        obj['quote_id'] = quote_id;
        obj['slippage_tolerance'] = slippage_tolerance;
    }

    /**
     * Constructs a <code>CreateSwapActivityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSwapActivityRequest} obj Optional instance to populate.
     * @return {module:model/CreateSwapActivityRequest} The populated <code>CreateSwapActivityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSwapActivityRequest();

            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
            }
            if (data.hasOwnProperty('quote_id')) {
                obj['quote_id'] = ApiClient.convertToType(data['quote_id'], 'String');
            }
            if (data.hasOwnProperty('slippage_tolerance')) {
                obj['slippage_tolerance'] = ApiClient.convertToType(data['slippage_tolerance'], 'String');
            }
            if (data.hasOwnProperty('app_initiator')) {
                obj['app_initiator'] = ApiClient.convertToType(data['app_initiator'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSwapActivityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSwapActivityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSwapActivityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
            throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
        }
        // ensure the json data is a string
        if (data['quote_id'] && !(typeof data['quote_id'] === 'string' || data['quote_id'] instanceof String)) {
            throw new Error("Expected the field `quote_id` to be a primitive type in the JSON string but got " + data['quote_id']);
        }
        // ensure the json data is a string
        if (data['slippage_tolerance'] && !(typeof data['slippage_tolerance'] === 'string' || data['slippage_tolerance'] instanceof String)) {
            throw new Error("Expected the field `slippage_tolerance` to be a primitive type in the JSON string but got " + data['slippage_tolerance']);
        }
        // ensure the json data is a string
        if (data['app_initiator'] && !(typeof data['app_initiator'] === 'string' || data['app_initiator'] instanceof String)) {
            throw new Error("Expected the field `app_initiator` to be a primitive type in the JSON string but got " + data['app_initiator']);
        }

        return true;
    }


}

CreateSwapActivityRequest.RequiredProperties = ["wallet_id", "quote_id", "slippage_tolerance"];

/**
 * The unique identifier of the wallet.
 * @member {String} wallet_id
 */
CreateSwapActivityRequest.prototype['wallet_id'] = undefined;

/**
 * The unique identifier of the quote.
 * @member {String} quote_id
 */
CreateSwapActivityRequest.prototype['quote_id'] = undefined;

/**
 * The slippage tolerance for the swap.
 * @member {String} slippage_tolerance
 */
CreateSwapActivityRequest.prototype['slippage_tolerance'] = undefined;

/**
 * The initiator of the app activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
 * @member {String} app_initiator
 */
CreateSwapActivityRequest.prototype['app_initiator'] = undefined;






export default CreateSwapActivityRequest;

