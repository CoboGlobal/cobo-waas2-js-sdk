/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionCosmosMessage model module.
 * @module model/TransactionCosmosMessage
 */
class TransactionCosmosMessage {
    /**
     * Constructs a new <code>TransactionCosmosMessage</code>.
     * The information about the Cosmos message.
     * @alias module:model/TransactionCosmosMessage
     * @param type_url {String} The type URL of the Cosmos message. 
     * @param message {String} The Base64-encoded Cosmos message. 
     */
    constructor(type_url, message) { 
        
        TransactionCosmosMessage.initialize(this, type_url, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type_url, message) { 
        obj['type_url'] = type_url;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>TransactionCosmosMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionCosmosMessage} obj Optional instance to populate.
     * @return {module:model/TransactionCosmosMessage} The populated <code>TransactionCosmosMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionCosmosMessage();

            if (data.hasOwnProperty('type_url')) {
                obj['type_url'] = ApiClient.convertToType(data['type_url'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionCosmosMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionCosmosMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionCosmosMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type_url'] && !(typeof data['type_url'] === 'string' || data['type_url'] instanceof String)) {
            throw new Error("Expected the field `type_url` to be a primitive type in the JSON string but got " + data['type_url']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

TransactionCosmosMessage.RequiredProperties = ["type_url", "message"];

/**
 * The type URL of the Cosmos message. 
 * @member {String} type_url
 */
TransactionCosmosMessage.prototype['type_url'] = undefined;

/**
 * The Base64-encoded Cosmos message. 
 * @member {String} message
 */
TransactionCosmosMessage.prototype['message'] = undefined;






export default TransactionCosmosMessage;

