/**
 * Cobo Wallet as a Service 2.0
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SmartContractInitiator from './SmartContractInitiator';
import SmartContractWalletType from './SmartContractWalletType';
import WalletSubtype from './WalletSubtype';
import WalletType from './WalletType';

/**
 * The SafeWallet model module.
 * @module model/SafeWallet
 */
class SafeWallet {
    /**
     * Constructs a new <code>SafeWallet</code>.
     * @alias module:model/SafeWallet
     * @param wallet_id {String} The wallet ID.
     * @param wallet_type {module:model/WalletType} 
     * @param wallet_subtype {module:model/WalletSubtype} 
     * @param name {String} The wallet name.
     * @param org_id {String} The ID of the owning organization.
     * @param smart_contract_wallet_type {module:model/SmartContractWalletType} 
     */
    constructor(wallet_id, wallet_type, wallet_subtype, name, org_id, smart_contract_wallet_type) { 
        
        SafeWallet.initialize(this, wallet_id, wallet_type, wallet_subtype, name, org_id, smart_contract_wallet_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, wallet_id, wallet_type, wallet_subtype, name, org_id, smart_contract_wallet_type) { 
        obj['wallet_id'] = wallet_id;
        obj['wallet_type'] = wallet_type;
        obj['wallet_subtype'] = wallet_subtype;
        obj['name'] = name;
        obj['org_id'] = org_id;
        obj['smart_contract_wallet_type'] = smart_contract_wallet_type;
    }

    /**
     * Constructs a <code>SafeWallet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SafeWallet} obj Optional instance to populate.
     * @return {module:model/SafeWallet} The populated <code>SafeWallet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SafeWallet();

            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
            }
            if (data.hasOwnProperty('wallet_type')) {
                obj['wallet_type'] = WalletType.constructFromObject(data['wallet_type']);
            }
            if (data.hasOwnProperty('wallet_subtype')) {
                obj['wallet_subtype'] = WalletSubtype.constructFromObject(data['wallet_subtype']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'String');
            }
            if (data.hasOwnProperty('chain_id')) {
                obj['chain_id'] = ApiClient.convertToType(data['chain_id'], 'String');
            }
            if (data.hasOwnProperty('smart_contract_wallet_type')) {
                obj['smart_contract_wallet_type'] = SmartContractWalletType.constructFromObject(data['smart_contract_wallet_type']);
            }
            if (data.hasOwnProperty('safe_address')) {
                obj['safe_address'] = ApiClient.convertToType(data['safe_address'], 'String');
            }
            if (data.hasOwnProperty('signers')) {
                obj['signers'] = ApiClient.convertToType(data['signers'], ['String']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('cobo_safe_address')) {
                obj['cobo_safe_address'] = ApiClient.convertToType(data['cobo_safe_address'], 'String');
            }
            if (data.hasOwnProperty('initiator')) {
                obj['initiator'] = SmartContractInitiator.constructFromObject(data['initiator']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SafeWallet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SafeWallet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SafeWallet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
            throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['org_id'] && !(typeof data['org_id'] === 'string' || data['org_id'] instanceof String)) {
            throw new Error("Expected the field `org_id` to be a primitive type in the JSON string but got " + data['org_id']);
        }
        // ensure the json data is a string
        if (data['chain_id'] && !(typeof data['chain_id'] === 'string' || data['chain_id'] instanceof String)) {
            throw new Error("Expected the field `chain_id` to be a primitive type in the JSON string but got " + data['chain_id']);
        }
        // ensure the json data is a string
        if (data['safe_address'] && !(typeof data['safe_address'] === 'string' || data['safe_address'] instanceof String)) {
            throw new Error("Expected the field `safe_address` to be a primitive type in the JSON string but got " + data['safe_address']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['signers'])) {
            throw new Error("Expected the field `signers` to be an array in the JSON data but got " + data['signers']);
        }
        // ensure the json data is a string
        if (data['cobo_safe_address'] && !(typeof data['cobo_safe_address'] === 'string' || data['cobo_safe_address'] instanceof String)) {
            throw new Error("Expected the field `cobo_safe_address` to be a primitive type in the JSON string but got " + data['cobo_safe_address']);
        }
        // validate the optional field `initiator`
        if (data['initiator']) { // data not null
          SmartContractInitiator.validateJSON(data['initiator']);
        }

        return true;
    }


}

SafeWallet.RequiredProperties = ["wallet_id", "wallet_type", "wallet_subtype", "name", "org_id", "smart_contract_wallet_type"];

/**
 * The wallet ID.
 * @member {String} wallet_id
 */
SafeWallet.prototype['wallet_id'] = undefined;

/**
 * @member {module:model/WalletType} wallet_type
 */
SafeWallet.prototype['wallet_type'] = undefined;

/**
 * @member {module:model/WalletSubtype} wallet_subtype
 */
SafeWallet.prototype['wallet_subtype'] = undefined;

/**
 * The wallet name.
 * @member {String} name
 */
SafeWallet.prototype['name'] = undefined;

/**
 * The ID of the owning organization.
 * @member {String} org_id
 */
SafeWallet.prototype['org_id'] = undefined;

/**
 * The ID of the chain on which the wallet operates.
 * @member {String} chain_id
 */
SafeWallet.prototype['chain_id'] = undefined;

/**
 * @member {module:model/SmartContractWalletType} smart_contract_wallet_type
 */
SafeWallet.prototype['smart_contract_wallet_type'] = undefined;

/**
 * The Smart Contract Wallet address.
 * @member {String} safe_address
 */
SafeWallet.prototype['safe_address'] = undefined;

/**
 * The signers of the Smart Contract Wallet.
 * @member {Array.<String>} signers
 */
SafeWallet.prototype['signers'] = undefined;

/**
 * The minimum number of confirmations required for the Smart Contract Wallet. 
 * @member {Number} threshold
 */
SafeWallet.prototype['threshold'] = undefined;

/**
 * The address of Cobo Safe.
 * @member {String} cobo_safe_address
 */
SafeWallet.prototype['cobo_safe_address'] = undefined;

/**
 * @member {module:model/SmartContractInitiator} initiator
 */
SafeWallet.prototype['initiator'] = undefined;






export default SafeWallet;

