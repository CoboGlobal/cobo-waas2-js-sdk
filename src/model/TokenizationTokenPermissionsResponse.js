/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TokenizationTokenPermission from './TokenizationTokenPermission';

/**
 * The TokenizationTokenPermissionsResponse model module.
 * @module model/TokenizationTokenPermissionsResponse
 */
class TokenizationTokenPermissionsResponse {
    /**
     * Constructs a new <code>TokenizationTokenPermissionsResponse</code>.
     * @alias module:model/TokenizationTokenPermissionsResponse
     * @param permissions {Array.<module:model/TokenizationTokenPermission>} List of available token permissions.
     * @param total_count {Number} Total number of permissions.
     */
    constructor(permissions, total_count) { 
        
        TokenizationTokenPermissionsResponse.initialize(this, permissions, total_count);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, permissions, total_count) { 
        obj['permissions'] = permissions;
        obj['total_count'] = total_count;
    }

    /**
     * Constructs a <code>TokenizationTokenPermissionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenizationTokenPermissionsResponse} obj Optional instance to populate.
     * @return {module:model/TokenizationTokenPermissionsResponse} The populated <code>TokenizationTokenPermissionsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenizationTokenPermissionsResponse();

            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [TokenizationTokenPermission]);
            }
            if (data.hasOwnProperty('total_count')) {
                obj['total_count'] = ApiClient.convertToType(data['total_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenizationTokenPermissionsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenizationTokenPermissionsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TokenizationTokenPermissionsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['permissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['permissions'])) {
                throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
            }
            // validate the optional field `permissions` (array)
            for (const item of data['permissions']) {
                TokenizationTokenPermission.validateJSON(item);
            };
        }

        return true;
    }


}

TokenizationTokenPermissionsResponse.RequiredProperties = ["permissions", "total_count"];

/**
 * List of available token permissions.
 * @member {Array.<module:model/TokenizationTokenPermission>} permissions
 */
TokenizationTokenPermissionsResponse.prototype['permissions'] = undefined;

/**
 * Total number of permissions.
 * @member {Number} total_count
 */
TokenizationTokenPermissionsResponse.prototype['total_count'] = undefined;






export default TokenizationTokenPermissionsResponse;

