/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BookkeepingSummary model module.
 * @module model/BookkeepingSummary
 */
class BookkeepingSummary {
    /**
     * Constructs a new <code>BookkeepingSummary</code>.
     * The bookkeeping item information.
     * @alias module:model/BookkeepingSummary
     * @param total_transaction_count {Number} Total transaction count.
     * @param total_inflow_value {String} The USD value of the inflow.
     * @param total_outflow_value {String} The USD value of the outflow.
     */
    constructor(total_transaction_count, total_inflow_value, total_outflow_value) { 
        
        BookkeepingSummary.initialize(this, total_transaction_count, total_inflow_value, total_outflow_value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, total_transaction_count, total_inflow_value, total_outflow_value) { 
        obj['total_transaction_count'] = total_transaction_count;
        obj['total_inflow_value'] = total_inflow_value;
        obj['total_outflow_value'] = total_outflow_value;
    }

    /**
     * Constructs a <code>BookkeepingSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BookkeepingSummary} obj Optional instance to populate.
     * @return {module:model/BookkeepingSummary} The populated <code>BookkeepingSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BookkeepingSummary();

            if (data.hasOwnProperty('total_transaction_count')) {
                obj['total_transaction_count'] = ApiClient.convertToType(data['total_transaction_count'], 'Number');
            }
            if (data.hasOwnProperty('total_inflow_value')) {
                obj['total_inflow_value'] = ApiClient.convertToType(data['total_inflow_value'], 'String');
            }
            if (data.hasOwnProperty('total_outflow_value')) {
                obj['total_outflow_value'] = ApiClient.convertToType(data['total_outflow_value'], 'String');
            }
            if (data.hasOwnProperty('total_fee_value')) {
                obj['total_fee_value'] = ApiClient.convertToType(data['total_fee_value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BookkeepingSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BookkeepingSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BookkeepingSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['total_inflow_value'] && !(typeof data['total_inflow_value'] === 'string' || data['total_inflow_value'] instanceof String)) {
            throw new Error("Expected the field `total_inflow_value` to be a primitive type in the JSON string but got " + data['total_inflow_value']);
        }
        // ensure the json data is a string
        if (data['total_outflow_value'] && !(typeof data['total_outflow_value'] === 'string' || data['total_outflow_value'] instanceof String)) {
            throw new Error("Expected the field `total_outflow_value` to be a primitive type in the JSON string but got " + data['total_outflow_value']);
        }
        // ensure the json data is a string
        if (data['total_fee_value'] && !(typeof data['total_fee_value'] === 'string' || data['total_fee_value'] instanceof String)) {
            throw new Error("Expected the field `total_fee_value` to be a primitive type in the JSON string but got " + data['total_fee_value']);
        }

        return true;
    }


}

BookkeepingSummary.RequiredProperties = ["total_transaction_count", "total_inflow_value", "total_outflow_value"];

/**
 * Total transaction count.
 * @member {Number} total_transaction_count
 */
BookkeepingSummary.prototype['total_transaction_count'] = undefined;

/**
 * The USD value of the inflow.
 * @member {String} total_inflow_value
 */
BookkeepingSummary.prototype['total_inflow_value'] = undefined;

/**
 * The USD value of the outflow.
 * @member {String} total_outflow_value
 */
BookkeepingSummary.prototype['total_outflow_value'] = undefined;

/**
 * The USD value of the fee.
 * @member {String} total_fee_value
 */
BookkeepingSummary.prototype['total_fee_value'] = undefined;






export default BookkeepingSummary;

