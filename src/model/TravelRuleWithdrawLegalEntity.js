/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SelectedEntityType from './SelectedEntityType';

/**
 * The TravelRuleWithdrawLegalEntity model module.
 * @module model/TravelRuleWithdrawLegalEntity
 */
class TravelRuleWithdrawLegalEntity {
    /**
     * Constructs a new <code>TravelRuleWithdrawLegalEntity</code>.
     * Required fields for LEGAL entities.
     * @alias module:model/TravelRuleWithdrawLegalEntity
     * @param selected_entity_type {module:model/SelectedEntityType} 
     * @param legal_name {String} The legal name of the entity.
     */
    constructor(selected_entity_type, legal_name) { 
        
        TravelRuleWithdrawLegalEntity.initialize(this, selected_entity_type, legal_name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, selected_entity_type, legal_name) { 
        obj['selected_entity_type'] = selected_entity_type;
        obj['legal_name'] = legal_name;
    }

    /**
     * Constructs a <code>TravelRuleWithdrawLegalEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TravelRuleWithdrawLegalEntity} obj Optional instance to populate.
     * @return {module:model/TravelRuleWithdrawLegalEntity} The populated <code>TravelRuleWithdrawLegalEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TravelRuleWithdrawLegalEntity();

            if (data.hasOwnProperty('selected_entity_type')) {
                obj['selected_entity_type'] = SelectedEntityType.constructFromObject(data['selected_entity_type']);
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('date_of_incorporation')) {
                obj['date_of_incorporation'] = ApiClient.convertToType(data['date_of_incorporation'], 'Date');
            }
            if (data.hasOwnProperty('place_of_incorporation')) {
                obj['place_of_incorporation'] = ApiClient.convertToType(data['place_of_incorporation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TravelRuleWithdrawLegalEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TravelRuleWithdrawLegalEntity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TravelRuleWithdrawLegalEntity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // ensure the json data is a string
        if (data['place_of_incorporation'] && !(typeof data['place_of_incorporation'] === 'string' || data['place_of_incorporation'] instanceof String)) {
            throw new Error("Expected the field `place_of_incorporation` to be a primitive type in the JSON string but got " + data['place_of_incorporation']);
        }

        return true;
    }


}

TravelRuleWithdrawLegalEntity.RequiredProperties = ["selected_entity_type", "legal_name"];

/**
 * @member {module:model/SelectedEntityType} selected_entity_type
 */
TravelRuleWithdrawLegalEntity.prototype['selected_entity_type'] = undefined;

/**
 * The legal name of the entity.
 * @member {String} legal_name
 */
TravelRuleWithdrawLegalEntity.prototype['legal_name'] = undefined;

/**
 * The incorporation date of the entity.
 * @member {Date} date_of_incorporation
 */
TravelRuleWithdrawLegalEntity.prototype['date_of_incorporation'] = undefined;

/**
 * The place of incorporation of the entity.
 * @member {String} place_of_incorporation
 */
TravelRuleWithdrawLegalEntity.prototype['place_of_incorporation'] = undefined;






export default TravelRuleWithdrawLegalEntity;

